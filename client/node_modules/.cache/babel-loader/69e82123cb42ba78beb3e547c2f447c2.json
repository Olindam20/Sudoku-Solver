{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OLINDAM SARMA\\\\Desktop\\\\code\\\\Projects\\\\sudoku-game-main\\\\client\\\\src\\\\Sudoku.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Board from \"./ui/Board\";\nimport Interface from \"./ui/Interface\";\nimport { REST } from \"./services/api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getGrid() {\n  const grid = [];\n\n  for (let i = 0; i < 9; i++) {\n    grid[i] = Array(9).fill(0);\n  }\n\n  return grid;\n}\n\nfunction copy2DArray(from, to) {\n  for (let i = 0; i < from.length; i++) {\n    to[i] = [...from[i]];\n  }\n}\n\nfunction Sudoku() {\n  _s();\n\n  const [grid, setGrid] = useState(getGrid);\n  const [puzzleStatus, setPuzzleStatus] = useState(\"** UNSOLVED **\");\n  const initialGrid = useRef(getGrid());\n\n  function handleChange(row, col, e) {\n    const re = /^[0-9\\b]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      if (Number(e.target.value) < 10 && initialGrid.current[row][col] === 0) {\n        const newGrid = [...grid];\n        newGrid[row][col] = Number(e.target.value);\n        setGrid(newGrid);\n      }\n    }\n  }\n\n  async function handleInterface(action) {\n    let newGrid;\n\n    switch (action) {\n      case \"create\":\n        newGrid = await handleCreate();\n        copy2DArray(newGrid, initialGrid.current);\n        setPuzzleStatus(\"\");\n        setGrid(newGrid);\n        break;\n\n      case \"solve\":\n        newGrid = await handleSolve();\n        setGrid(newGrid);\n        break;\n\n      case \"clear\":\n        newGrid = getGrid();\n        copy2DArray(newGrid, initialGrid.current);\n        setGrid(newGrid);\n        setPuzzleStatus(\"\");\n        break;\n\n      case \"validate\":\n        const status = await handleValidate();\n        const puzzStats = status ? \"** SOLVED **\" : \"** UNSOLVED **\";\n        setPuzzleStatus(puzzStats);\n        break;\n\n      default:\n        throw new Error(\"Invalid action\");\n    }\n  }\n\n  async function handleCreate() {\n    try {\n      const response = await REST.getBoard();\n      const data = await response.json();\n      return data.game;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleValidate() {\n    try {\n      const response = await REST.validateBoard(grid);\n      const data = await response.json();\n      return data.status;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleSolve() {\n    try {\n      const response = await REST.solveBoard(grid);\n      const data = await response.json();\n\n      if (data.status) {\n        setPuzzleStatus(\"** SOLVED **\");\n        return data.solution;\n      } else {\n        setPuzzleStatus(\"** UNSOLVABLE **\");\n        return grid;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sudoku\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      puzzle: initialGrid.current,\n      grid: grid,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Interface, {\n      handleInterface: handleInterface,\n      status: puzzleStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sudoku, \"bCq9JHtiLr7c5PUoQ6grxDf6724=\");\n\n_c = Sudoku;\nexport default Sudoku;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sudoku\");","map":{"version":3,"names":["React","useState","useRef","Board","Interface","REST","getGrid","grid","i","Array","fill","copy2DArray","from","to","length","Sudoku","setGrid","puzzleStatus","setPuzzleStatus","initialGrid","handleChange","row","col","e","re","target","value","test","Number","current","newGrid","handleInterface","action","handleCreate","handleSolve","status","handleValidate","puzzStats","Error","response","getBoard","data","json","game","error","console","log","validateBoard","solveBoard","solution"],"sources":["C:/Users/OLINDAM SARMA/Desktop/code/Projects/sudoku-game-main/client/src/Sudoku.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Board from \"./ui/Board\";\nimport Interface from \"./ui/Interface\";\nimport { REST } from \"./services/api.js\";\n\nfunction getGrid() {\n  const grid = [];\n  for (let i = 0; i < 9; i++) {\n    grid[i] = Array(9).fill(0);\n  }\n  return grid;\n}\n\nfunction copy2DArray(from, to) {\n  for (let i = 0; i < from.length; i++) {\n    to[i] = [...from[i]];\n  }\n}\n\nfunction Sudoku() {\n  const [grid, setGrid] = useState(getGrid);\n  const [puzzleStatus, setPuzzleStatus] = useState(\"** UNSOLVED **\");\n  const initialGrid = useRef(getGrid());\n\n  function handleChange(row, col, e) {\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      if (Number(e.target.value) < 10 && initialGrid.current[row][col] === 0) {\n        const newGrid = [...grid];\n        newGrid[row][col] = Number(e.target.value);\n        setGrid(newGrid);\n      }\n    }\n  }\n\n  async function handleInterface(action) {\n    let newGrid;\n    switch (action) {\n      case \"create\":\n        newGrid = await handleCreate();\n        copy2DArray(newGrid, initialGrid.current);\n        setPuzzleStatus(\"\");\n        setGrid(newGrid);\n        break;\n      case \"solve\":\n        newGrid = await handleSolve();\n        setGrid(newGrid);\n        break;\n      case \"clear\":\n        newGrid = getGrid();\n        copy2DArray(newGrid, initialGrid.current);\n        setGrid(newGrid);\n        setPuzzleStatus(\"\");\n        break;\n      case \"validate\":\n        const status = await handleValidate();\n        const puzzStats = status ? \"** SOLVED **\" : \"** UNSOLVED **\";\n        setPuzzleStatus(puzzStats);\n        break;\n      default:\n        throw new Error(\"Invalid action\");\n    }\n  }\n\n  async function handleCreate() {\n    try {\n      const response = await REST.getBoard();\n      const data = await response.json();\n      return data.game;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleValidate() {\n    try {\n      const response = await REST.validateBoard(grid);\n      const data = await response.json();\n      return data.status;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleSolve() {\n    try {\n      const response = await REST.solveBoard(grid);\n      const data = await response.json();\n      if (data.status) {\n        setPuzzleStatus(\"** SOLVED **\");\n        return data.solution;\n      } else {\n        setPuzzleStatus(\"** UNSOLVABLE **\");\n        return grid;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"Sudoku\">\n      <Board\n        puzzle={initialGrid.current}\n        grid={grid}\n        handleChange={handleChange}\n      />\n      <Interface handleInterface={handleInterface} status={puzzleStatus} />\n    </div>\n  );\n}\n\nexport default Sudoku;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}